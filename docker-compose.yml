version: "3.9"

services:
  eureka-server:
    image: brianchoi506/eureka-server:1.0.3
    container_name: eureka-server
    env_file:
      - .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      TZ: Asia/Seoul
    expose:
      - "8761"                         # 내부 통신만
    networks: [ app-net ]
#    healthcheck:
#      test: ["CMD", "curl", "-fsS", "http://localhost:8761/actuator/health"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 100s
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  gateway-service:
    image: brianchoi506/gateway-service:1.0.3
    container_name: gateway-service
    env_file: # 서버(EC2)에만 존재
      - .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      TZ: Asia/Seoul
    depends_on:
      eureka-server:
        condition: service_healthy
    ports:
      - "80:19091"                     # 외부 노출은 게이트웨이만
    networks: [ app-net ]
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  auth-service:
    image: brianchoi506/auth-service:1.0.3
    container_name: auth-service
    env_file:
      - .env.prod               # DB/REDIS 엔드포인트는 .env로 주입 (RDS/ElastiCache)
    environment:
      SPRING_PROFILES_ACTIVE: prod
      TZ: Asia/Seoul
    depends_on:
      eureka-server:
        condition: service_healthy
    expose:
      - "8080"                          # 내부 통신만
    networks: [ app-net ]
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    command: ["java", "-jar", "app.jar"]

  chat-service:
    image: brianchoi506/chat-service:1.0.3
    container_name: chat-service
    env_file:   # MONGODB_URI는 Atlas/클러스터 주소로
      - .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      TZ: Asia/Seoul
    depends_on:
      eureka-server:
        condition: service_healthy
    expose:
      - "8080"
    networks: [ app-net ]
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    command: ["java", "-jar", "app.jar"]

networks:
  app-net:
    driver: bridge
